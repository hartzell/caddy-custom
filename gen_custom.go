// Don't build this when go build runs
// +build ignore

// This program generates custom.go

package main

import (
	"log"
	"os"
	"regexp"
	"strings"
	"text/template"
)

func main() {
	f, err := os.Create("custom.go")
	if err != nil {
		log.Fatal(err)
	}
	defer f.Close()

	plugins := []string{}
	plugins_string := os.Getenv("CADDY_PLUGINS")
	if (len(plugins_string) > 0) {
		plugins = regexp.MustCompile("[[:space:]]+").Split(plugins_string, -1)
	}

	telemetry := false
	t_string := strings.ToLower(os.Getenv("CADDY_ENABLE_TELEMETRY"))
	switch {
	case t_string == "yes":
	case t_string == "true":
		telemetry = true
}

	packageTemplate.Execute(f, struct {
		Plugins []string
		Telemetry bool
}{
		Plugins: plugins,
		Telemetry: telemetry,
	})
}

var packageTemplate = template.Must(template.New("").Parse(`// Code generated by go generate; DO NOT EDIT.
package main

import (

{{- range .Plugins }}
	_ "{{ . }}"
{{- end }}
)

func enableTelemetry() bool {
	return {{if .Telemetry}}true{{else}}false{{end}}
}

`))
